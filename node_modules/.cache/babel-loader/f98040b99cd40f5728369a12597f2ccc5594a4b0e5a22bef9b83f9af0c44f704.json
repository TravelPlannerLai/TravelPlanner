{"ast":null,"code":"var _jsxFileName = \"D:\\\\laiproject\\\\travelmap\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport TopBar from \"./TopBar\";\nimport MapArea from \"./MapArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // 全局状态管理\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [selectedDays, setSelectedDays] = useState(\"5days\");\n  const [currentCity, setCurrentCity] = useState(\"Paris\");\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [savedRoutes, setSavedRoutes] = useState([{\n    id: 1,\n    name: \"Paris Romantic 3-Day Tour\",\n    days: 3,\n    attractions: 8\n  }, {\n    id: 2,\n    name: \"Paris Art & Culture Route\",\n    days: 5,\n    attractions: 12\n  }, {\n    id: 3,\n    name: \"Paris Food Adventure\",\n    days: 2,\n    attractions: 6\n  }]);\n\n  // 处理路线选择\n  const handleRouteSelect = route => {\n    setSelectedRoute(route);\n    setSelectedDays(`${route.days}days`);\n  };\n\n  // 处理新路线保存\n  const handleSaveRoute = routeData => {\n    const newRoute = {\n      id: Date.now(),\n      name: routeData.name,\n      days: routeData.days,\n      attractions: routeData.attractions\n    };\n    setSavedRoutes([...savedRoutes, newRoute]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      collapsed: sidebarCollapsed,\n      onToggle: setSidebarCollapsed,\n      savedRoutes: savedRoutes,\n      onRouteSelect: handleRouteSelect,\n      selectedRoute: selectedRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        currentCity: currentCity,\n        selectedDays: selectedDays,\n        onCityChange: setCurrentCity,\n        onDaysChange: setSelectedDays,\n        selectedRoute: selectedRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapArea, {\n        currentCity: currentCity,\n        selectedDays: selectedDays,\n        selectedRoute: selectedRoute,\n        onSaveRoute: handleSaveRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"RPJ1WSJq8BXIsfZk8ZH+uxnJ7kA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Sidebar","TopBar","MapArea","jsxDEV","_jsxDEV","Dashboard","_s","sidebarCollapsed","setSidebarCollapsed","selectedDays","setSelectedDays","currentCity","setCurrentCity","selectedRoute","setSelectedRoute","savedRoutes","setSavedRoutes","id","name","days","attractions","handleRouteSelect","route","handleSaveRoute","routeData","newRoute","Date","now","className","children","collapsed","onToggle","onRouteSelect","fileName","_jsxFileName","lineNumber","columnNumber","onCityChange","onDaysChange","onSaveRoute","_c","$RefreshReg$"],"sources":["D:/laiproject/travelmap/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport TopBar from \"./TopBar\";\r\nimport MapArea from \"./MapArea\";\r\n\r\nconst Dashboard = () => {\r\n  // 全局状态管理\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const [selectedDays, setSelectedDays] = useState(\"5days\");\r\n  const [currentCity, setCurrentCity] = useState(\"Paris\");\r\n  const [selectedRoute, setSelectedRoute] = useState(null);\r\n  const [savedRoutes, setSavedRoutes] = useState([\r\n    { id: 1, name: \"Paris Romantic 3-Day Tour\", days: 3, attractions: 8 },\r\n    { id: 2, name: \"Paris Art & Culture Route\", days: 5, attractions: 12 },\r\n    { id: 3, name: \"Paris Food Adventure\", days: 2, attractions: 6 },\r\n  ]);\r\n\r\n  // 处理路线选择\r\n  const handleRouteSelect = (route) => {\r\n    setSelectedRoute(route);\r\n    setSelectedDays(`${route.days}days`);\r\n  };\r\n\r\n  // 处理新路线保存\r\n  const handleSaveRoute = (routeData) => {\r\n    const newRoute = {\r\n      id: Date.now(),\r\n      name: routeData.name,\r\n      days: routeData.days,\r\n      attractions: routeData.attractions,\r\n    };\r\n    setSavedRoutes([...savedRoutes, newRoute]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-50\">\r\n      {/* 侧边栏 */}\r\n      <Sidebar\r\n        collapsed={sidebarCollapsed}\r\n        onToggle={setSidebarCollapsed}\r\n        savedRoutes={savedRoutes}\r\n        onRouteSelect={handleRouteSelect}\r\n        selectedRoute={selectedRoute}\r\n      />\r\n\r\n      {/* 主内容区域 */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        {/* 顶部工具栏 */}\r\n        <TopBar\r\n          currentCity={currentCity}\r\n          selectedDays={selectedDays}\r\n          onCityChange={setCurrentCity}\r\n          onDaysChange={setSelectedDays}\r\n          selectedRoute={selectedRoute}\r\n        />\r\n\r\n        {/* 地图区域 */}\r\n        <MapArea\r\n          currentCity={currentCity}\r\n          selectedDays={selectedDays}\r\n          selectedRoute={selectedRoute}\r\n          onSaveRoute={handleSaveRoute}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}