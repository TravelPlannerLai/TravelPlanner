{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import\"./SelectCity.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const stateCityData={Alabama:[\"Birmingham\",\"Montgomery\",\"Mobile\"],Alaska:[\"Anchorage\",\"Fairbanks\",\"Juneau\"],Arizona:[\"Phoenix\",\"Tucson\",\"Mesa\"],Arkansas:[\"Little Rock\",\"Fort Smith\",\"Fayetteville\"],California:[\"Los Angeles\",\"San Francisco\",\"San Diego\"],Colorado:[\"Denver\",\"Colorado Springs\",\"Aurora\"],Connecticut:[\"Bridgeport\",\"New Haven\",\"Stamford\"],Delaware:[\"Wilmington\",\"Dover\",\"Newark\"],Florida:[\"Miami\",\"Orlando\",\"Tampa\"],Georgia:[\"Atlanta\",\"Savannah\",\"Augusta\"],Hawaii:[\"Honolulu\",\"Hilo\",\"Kailua\"],Idaho:[\"Boise\",\"Meridian\",\"Nampa\"],Illinois:[\"Chicago\",\"Aurora\",\"Naperville\"],Indiana:[\"Indianapolis\",\"Fort Wayne\",\"Evansville\"],Iowa:[\"Des Moines\",\"Cedar Rapids\",\"Davenport\"],Kansas:[\"Wichita\",\"Overland Park\",\"Kansas City\"],Kentucky:[\"Louisville\",\"Lexington\",\"Bowling Green\"],Louisiana:[\"New Orleans\",\"Baton Rouge\",\"Shreveport\"],Maine:[\"Portland\",\"Lewiston\",\"Bangor\"],Maryland:[\"Baltimore\",\"Frederick\",\"Rockville\"],Massachusetts:[\"Boston\",\"Worcester\",\"Springfield\"],Michigan:[\"Detroit\",\"Grand Rapids\",\"Warren\"],Minnesota:[\"Minneapolis\",\"Saint Paul\",\"Rochester\"],Mississippi:[\"Jackson\",\"Gulfport\",\"Southaven\"],Missouri:[\"Kansas City\",\"Saint Louis\",\"Springfield\"],Montana:[\"Billings\",\"Missoula\",\"Great Falls\"],Nebraska:[\"Omaha\",\"Lincoln\",\"Bellevue\"],Nevada:[\"Las Vegas\",\"Reno\",\"Henderson\"],\"New Hampshire\":[\"Manchester\",\"Nashua\",\"Concord\"],\"New Jersey\":[\"Newark\",\"Jersey City\",\"Paterson\"],\"New Mexico\":[\"Albuquerque\",\"Santa Fe\",\"Las Cruces\"],\"New York\":[\"New York City\",\"Buffalo\",\"Rochester\"],\"North Carolina\":[\"Charlotte\",\"Raleigh\",\"Greensboro\"],\"North Dakota\":[\"Fargo\",\"Bismarck\",\"Grand Forks\"],Ohio:[\"Columbus\",\"Cleveland\",\"Cincinnati\"],Oklahoma:[\"Oklahoma City\",\"Tulsa\",\"Norman\"],Oregon:[\"Portland\",\"Salem\",\"Eugene\"],Pennsylvania:[\"Philadelphia\",\"Pittsburgh\",\"Allentown\"],\"Rhode Island\":[\"Providence\",\"Cranston\",\"Warwick\"],\"South Carolina\":[\"Charleston\",\"Columbia\",\"North Charleston\"],\"South Dakota\":[\"Sioux Falls\",\"Rapid City\",\"Aberdeen\"],Tennessee:[\"Nashville\",\"Memphis\",\"Knoxville\"],Texas:[\"Houston\",\"Austin\",\"Dallas\"],Utah:[\"Salt Lake City\",\"West Valley City\",\"Provo\"],Vermont:[\"Burlington\",\"South Burlington\",\"Rutland\"],Virginia:[\"Virginia Beach\",\"Norfolk\",\"Richmond\"],Washington:[\"Seattle\",\"Spokane\",\"Tacoma\"],\"West Virginia\":[\"Charleston\",\"Huntington\",\"Morgantown\"],Wisconsin:[\"Milwaukee\",\"Madison\",\"Green Bay\"],Wyoming:[\"Cheyenne\",\"Casper\",\"Laramie\"],\"District of Columbia\":[\"Washington D.C.\"]};function SelectCity(){var _location$state;const[selectedState,setSelectedState]=useState(\"\");const[cities,setCities]=useState([]);const[selectedCity,setSelectedCity]=useState(\"\");const navigate=useNavigate();const location=useLocation();// 检查是否从主页面跳转过来的\nconst isFromMainPage=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.fromMain;const handleStateChange=e=>{const state=e.target.value;setSelectedState(state);setCities(stateCityData[state]||[]);setSelectedCity(\"\");};const handleCityChange=e=>{setSelectedCity(e.target.value);};const handleNavigateToMainPage=()=>{if(selectedCity){if(isFromMainPage){// 如果是从主页面来的，返回主页面并传递选择的城市\nnavigate(\"/main\",{state:{selectedCity:selectedCity,selectedState:selectedState}});}else{// 如果是从登录流程来的，正常跳转到主页面\nnavigate(\"/main\",{state:{city:selectedCity,selectedCity:selectedCity,selectedState:selectedState}});}}else{alert(\"Please select a city!\");}};const handleBackToMain=()=>{// 返回主页面但不更改城市\nnavigate(\"/main\");};return/*#__PURE__*/_jsx(\"div\",{className:\"select-city-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"select-city-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Select State and City\"}),isFromMainPage&&/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToMain,style:{marginBottom:\"20px\",backgroundColor:\"#6c757d\",padding:\"8px 16px\",fontSize:\"14px\"},children:\"\\u2190 Back to Main\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"10px\"},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"state-select\",children:\"State: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"state-select\",value:selectedState,onChange:handleStateChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a state\"}),Object.keys(stateCityData).map(state=>/*#__PURE__*/_jsx(\"option\",{value:state,children:state},state))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city-select\",children:\"City: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"city-select\",value:selectedCity,onChange:handleCityChange,disabled:!cities.length,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a city\"}),cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city))]})]}),selectedState&&selectedCity&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"You selected:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"State: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedState})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"City: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedCity})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNavigateToMainPage,children:isFromMainPage?\"Update City\":\"Go to Map\"})]})]})});}export default SelectCity;","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","stateCityData","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","SelectCity","_location$state","selectedState","setSelectedState","cities","setCities","selectedCity","setSelectedCity","navigate","location","isFromMainPage","state","fromMain","handleStateChange","e","target","value","handleCityChange","handleNavigateToMainPage","city","alert","handleBackToMain","className","children","onClick","style","marginBottom","backgroundColor","padding","fontSize","htmlFor","id","onChange","Object","keys","map","disabled","length","marginTop"],"sources":["/Users/william/Desktop/front/TravelPlanner/src/components/SelectCity.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./SelectCity.css\";\n\nconst stateCityData = {\n  Alabama: [\"Birmingham\", \"Montgomery\", \"Mobile\"],\n  Alaska: [\"Anchorage\", \"Fairbanks\", \"Juneau\"],\n  Arizona: [\"Phoenix\", \"Tucson\", \"Mesa\"],\n  Arkansas: [\"Little Rock\", \"Fort Smith\", \"Fayetteville\"],\n  California: [\"Los Angeles\", \"San Francisco\", \"San Diego\"],\n  Colorado: [\"Denver\", \"Colorado Springs\", \"Aurora\"],\n  Connecticut: [\"Bridgeport\", \"New Haven\", \"Stamford\"],\n  Delaware: [\"Wilmington\", \"Dover\", \"Newark\"],\n  Florida: [\"Miami\", \"Orlando\", \"Tampa\"],\n  Georgia: [\"Atlanta\", \"Savannah\", \"Augusta\"],\n  Hawaii: [\"Honolulu\", \"Hilo\", \"Kailua\"],\n  Idaho: [\"Boise\", \"Meridian\", \"Nampa\"],\n  Illinois: [\"Chicago\", \"Aurora\", \"Naperville\"],\n  Indiana: [\"Indianapolis\", \"Fort Wayne\", \"Evansville\"],\n  Iowa: [\"Des Moines\", \"Cedar Rapids\", \"Davenport\"],\n  Kansas: [\"Wichita\", \"Overland Park\", \"Kansas City\"],\n  Kentucky: [\"Louisville\", \"Lexington\", \"Bowling Green\"],\n  Louisiana: [\"New Orleans\", \"Baton Rouge\", \"Shreveport\"],\n  Maine: [\"Portland\", \"Lewiston\", \"Bangor\"],\n  Maryland: [\"Baltimore\", \"Frederick\", \"Rockville\"],\n  Massachusetts: [\"Boston\", \"Worcester\", \"Springfield\"],\n  Michigan: [\"Detroit\", \"Grand Rapids\", \"Warren\"],\n  Minnesota: [\"Minneapolis\", \"Saint Paul\", \"Rochester\"],\n  Mississippi: [\"Jackson\", \"Gulfport\", \"Southaven\"],\n  Missouri: [\"Kansas City\", \"Saint Louis\", \"Springfield\"],\n  Montana: [\"Billings\", \"Missoula\", \"Great Falls\"],\n  Nebraska: [\"Omaha\", \"Lincoln\", \"Bellevue\"],\n  Nevada: [\"Las Vegas\", \"Reno\", \"Henderson\"],\n  \"New Hampshire\": [\"Manchester\", \"Nashua\", \"Concord\"],\n  \"New Jersey\": [\"Newark\", \"Jersey City\", \"Paterson\"],\n  \"New Mexico\": [\"Albuquerque\", \"Santa Fe\", \"Las Cruces\"],\n  \"New York\": [\"New York City\", \"Buffalo\", \"Rochester\"],\n  \"North Carolina\": [\"Charlotte\", \"Raleigh\", \"Greensboro\"],\n  \"North Dakota\": [\"Fargo\", \"Bismarck\", \"Grand Forks\"],\n  Ohio: [\"Columbus\", \"Cleveland\", \"Cincinnati\"],\n  Oklahoma: [\"Oklahoma City\", \"Tulsa\", \"Norman\"],\n  Oregon: [\"Portland\", \"Salem\", \"Eugene\"],\n  Pennsylvania: [\"Philadelphia\", \"Pittsburgh\", \"Allentown\"],\n  \"Rhode Island\": [\"Providence\", \"Cranston\", \"Warwick\"],\n  \"South Carolina\": [\"Charleston\", \"Columbia\", \"North Charleston\"],\n  \"South Dakota\": [\"Sioux Falls\", \"Rapid City\", \"Aberdeen\"],\n  Tennessee: [\"Nashville\", \"Memphis\", \"Knoxville\"],\n  Texas: [\"Houston\", \"Austin\", \"Dallas\"],\n  Utah: [\"Salt Lake City\", \"West Valley City\", \"Provo\"],\n  Vermont: [\"Burlington\", \"South Burlington\", \"Rutland\"],\n  Virginia: [\"Virginia Beach\", \"Norfolk\", \"Richmond\"],\n  Washington: [\"Seattle\", \"Spokane\", \"Tacoma\"],\n  \"West Virginia\": [\"Charleston\", \"Huntington\", \"Morgantown\"],\n  Wisconsin: [\"Milwaukee\", \"Madison\", \"Green Bay\"],\n  Wyoming: [\"Cheyenne\", \"Casper\", \"Laramie\"],\n  \"District of Columbia\": [\"Washington D.C.\"],\n};\n\nfunction SelectCity() {\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // 检查是否从主页面跳转过来的\n  const isFromMainPage = location.state?.fromMain;\n\n  const handleStateChange = (e) => {\n    const state = e.target.value;\n    setSelectedState(state);\n    setCities(stateCityData[state] || []);\n    setSelectedCity(\"\");\n  };\n\n  const handleCityChange = (e) => {\n    setSelectedCity(e.target.value);\n  };\n\n  const handleNavigateToMainPage = () => {\n    if (selectedCity) {\n      if (isFromMainPage) {\n        // 如果是从主页面来的，返回主页面并传递选择的城市\n        navigate(\"/main\", {\n          state: {\n            selectedCity: selectedCity,\n            selectedState: selectedState,\n          },\n        });\n      } else {\n        // 如果是从登录流程来的，正常跳转到主页面\n        navigate(\"/main\", {\n          state: {\n            city: selectedCity,\n            selectedCity: selectedCity,\n            selectedState: selectedState,\n          },\n        });\n      }\n    } else {\n      alert(\"Please select a city!\");\n    }\n  };\n\n  const handleBackToMain = () => {\n    // 返回主页面但不更改城市\n    navigate(\"/main\");\n  };\n\n  return (\n    <div className=\"select-city-page\">\n      <div className=\"select-city-container\">\n        <h1>Select State and City</h1>\n\n        {/* 如果是从主页面来的，显示返回按钮 */}\n        {isFromMainPage && (\n          <button\n            onClick={handleBackToMain}\n            style={{\n              marginBottom: \"20px\",\n              backgroundColor: \"#6c757d\",\n              padding: \"8px 16px\",\n              fontSize: \"14px\",\n            }}\n          >\n            ← Back to Main\n          </button>\n        )}\n\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"state-select\">State: </label>\n          <select\n            id=\"state-select\"\n            value={selectedState}\n            onChange={handleStateChange}\n          >\n            <option value=\"\">Select a state</option>\n            {Object.keys(stateCityData).map((state) => (\n              <option key={state} value={state}>\n                {state}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label htmlFor=\"city-select\">City: </label>\n          <select\n            id=\"city-select\"\n            value={selectedCity}\n            onChange={handleCityChange}\n            disabled={!cities.length}\n          >\n            <option value=\"\">Select a city</option>\n            {cities.map((city) => (\n              <option key={city} value={city}>\n                {city}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedState && selectedCity && (\n          <div style={{ marginTop: \"20px\" }}>\n            <h2>You selected:</h2>\n            <p>\n              State: <strong>{selectedState}</strong>\n            </p>\n            <p>\n              City: <strong>{selectedCity}</strong>\n            </p>\n            <button onClick={handleNavigateToMainPage}>\n              {isFromMainPage ? \"Update City\" : \"Go to Map\"}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectCity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}