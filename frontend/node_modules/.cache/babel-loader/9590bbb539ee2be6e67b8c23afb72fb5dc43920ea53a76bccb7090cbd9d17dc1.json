{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/front/TravelPlanner/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport TopBar from \"./TopBar\";\nimport MapArea from \"./MapArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // 全局状态管理\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [selectedDays, setSelectedDays] = useState(\"5days\");\n  const [currentCity, setCurrentCity] = useState(\"Paris\");\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [savedRoutes, setSavedRoutes] = useState([{\n    id: 1,\n    name: \"Paris Romantic 3-Day Tour\",\n    days: 3,\n    attractions: 8\n  }, {\n    id: 2,\n    name: \"Paris Art & Culture Route\",\n    days: 5,\n    attractions: 12\n  }, {\n    id: 3,\n    name: \"Paris Food Adventure\",\n    days: 2,\n    attractions: 6\n  }]);\n  const location = useLocation();\n\n  // 监听从城市选择页面返回的数据\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.selectedCity) {\n      setCurrentCity(location.state.selectedCity);\n      console.log(\"城市已更新为:\", location.state.selectedCity);\n\n      // 清除路由状态，避免重复触发\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state]);\n\n  // 明确定义切换函数\n  const handleSidebarToggle = () => {\n    console.log(\"Toggling sidebar, current state:\", sidebarCollapsed);\n    setSidebarCollapsed(prev => !prev);\n  };\n\n  // 处理路线选择\n  const handleRouteSelect = route => {\n    setSelectedRoute(route);\n    setSelectedDays(`${route.days}days`);\n  };\n\n  // 处理新路线保存\n  const handleSaveRoute = routeData => {\n    const newRoute = {\n      id: Date.now(),\n      name: routeData.name,\n      days: routeData.days,\n      attractions: routeData.attractions\n    };\n    setSavedRoutes([...savedRoutes, newRoute]);\n  };\n\n  // 处理城市更改\n  const handleCityChange = newCity => {\n    setCurrentCity(newCity);\n    console.log(\"城市已更改为:\", newCity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      collapsed: sidebarCollapsed,\n      onToggle: handleSidebarToggle,\n      savedRoutes: savedRoutes,\n      onRouteSelect: handleRouteSelect,\n      selectedRoute: selectedRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        currentCity: currentCity,\n        selectedDays: selectedDays,\n        onCityChange: handleCityChange,\n        onDaysChange: setSelectedDays,\n        selectedRoute: selectedRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapArea, {\n        currentCity: currentCity,\n        selectedDays: selectedDays,\n        selectedRoute: selectedRoute,\n        onSaveRoute: handleSaveRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hRTd40CG6+rTs4fv8F3u9FwVHPc=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Sidebar","TopBar","MapArea","jsxDEV","_jsxDEV","Dashboard","_s","sidebarCollapsed","setSidebarCollapsed","selectedDays","setSelectedDays","currentCity","setCurrentCity","selectedRoute","setSelectedRoute","savedRoutes","setSavedRoutes","id","name","days","attractions","location","_location$state","state","selectedCity","console","log","window","history","replaceState","document","title","handleSidebarToggle","prev","handleRouteSelect","route","handleSaveRoute","routeData","newRoute","Date","now","handleCityChange","newCity","className","children","collapsed","onToggle","onRouteSelect","fileName","_jsxFileName","lineNumber","columnNumber","onCityChange","onDaysChange","onSaveRoute","_c","$RefreshReg$"],"sources":["/Users/william/Desktop/front/TravelPlanner/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport TopBar from \"./TopBar\";\nimport MapArea from \"./MapArea\";\n\nconst Dashboard = () => {\n  // 全局状态管理\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [selectedDays, setSelectedDays] = useState(\"5days\");\n  const [currentCity, setCurrentCity] = useState(\"Paris\");\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [savedRoutes, setSavedRoutes] = useState([\n    { id: 1, name: \"Paris Romantic 3-Day Tour\", days: 3, attractions: 8 },\n    { id: 2, name: \"Paris Art & Culture Route\", days: 5, attractions: 12 },\n    { id: 3, name: \"Paris Food Adventure\", days: 2, attractions: 6 },\n  ]);\n\n  const location = useLocation();\n\n  // 监听从城市选择页面返回的数据\n  useEffect(() => {\n    if (location.state?.selectedCity) {\n      setCurrentCity(location.state.selectedCity);\n      console.log(\"城市已更新为:\", location.state.selectedCity);\n\n      // 清除路由状态，避免重复触发\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state]);\n\n  // 明确定义切换函数\n  const handleSidebarToggle = () => {\n    console.log(\"Toggling sidebar, current state:\", sidebarCollapsed);\n    setSidebarCollapsed((prev) => !prev);\n  };\n\n  // 处理路线选择\n  const handleRouteSelect = (route) => {\n    setSelectedRoute(route);\n    setSelectedDays(`${route.days}days`);\n  };\n\n  // 处理新路线保存\n  const handleSaveRoute = (routeData) => {\n    const newRoute = {\n      id: Date.now(),\n      name: routeData.name,\n      days: routeData.days,\n      attractions: routeData.attractions,\n    };\n    setSavedRoutes([...savedRoutes, newRoute]);\n  };\n\n  // 处理城市更改\n  const handleCityChange = (newCity) => {\n    setCurrentCity(newCity);\n    console.log(\"城市已更改为:\", newCity);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* 侧边栏 */}\n      <Sidebar\n        collapsed={sidebarCollapsed}\n        onToggle={handleSidebarToggle}\n        savedRoutes={savedRoutes}\n        onRouteSelect={handleRouteSelect}\n        selectedRoute={selectedRoute}\n      />\n\n      {/* 主内容区域 */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* 顶部工具栏 */}\n        <TopBar\n          currentCity={currentCity}\n          selectedDays={selectedDays}\n          onCityChange={handleCityChange}\n          onDaysChange={setSelectedDays}\n          selectedRoute={selectedRoute}\n        />\n\n        {/* 地图区域 - 恢复完整的 MapArea */}\n        <MapArea\n          currentCity={currentCity}\n          selectedDays={selectedDays}\n          selectedRoute={selectedRoute}\n          onSaveRoute={handleSaveRoute}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}