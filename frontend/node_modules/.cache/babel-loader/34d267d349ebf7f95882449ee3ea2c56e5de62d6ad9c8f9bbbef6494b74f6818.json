{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useLocation}from\"react-router-dom\";import Sidebar from\"./Sidebar\";import TopBar from\"./TopBar\";import MapArea from\"./MapArea\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{// 全局状态管理\nconst[sidebarCollapsed,setSidebarCollapsed]=useState(false);const[selectedDays,setSelectedDays]=useState(\"5days\");const[currentCity,setCurrentCity]=useState(\"Paris\");const[selectedRoute,setSelectedRoute]=useState(null);const[savedRoutes,setSavedRoutes]=useState([{id:1,name:\"Paris Romantic 3-Day Tour\",days:3,attractions:8},{id:2,name:\"Paris Art & Culture Route\",days:5,attractions:12},{id:3,name:\"Paris Food Adventure\",days:2,attractions:6}]);const location=useLocation();// 监听从城市选择页面返回的数据\nuseEffect(()=>{var _location$state;if((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.selectedCity){setCurrentCity(location.state.selectedCity);console.log(\"城市已更新为:\",location.state.selectedCity);// 清除路由状态，避免重复触发\nwindow.history.replaceState({},document.title);}},[location.state]);// 明确定义切换函数\nconst handleSidebarToggle=()=>{console.log(\"Toggling sidebar, current state:\",sidebarCollapsed);setSidebarCollapsed(prev=>!prev);};// 处理路线选择\nconst handleRouteSelect=route=>{setSelectedRoute(route);setSelectedDays(\"\".concat(route.days,\"days\"));};// 处理新路线保存\nconst handleSaveRoute=routeData=>{const newRoute={id:Date.now(),name:routeData.name,days:routeData.days,attractions:routeData.attractions};setSavedRoutes([...savedRoutes,newRoute]);};// 处理城市更改\nconst handleCityChange=newCity=>{setCurrentCity(newCity);console.log(\"城市已更改为:\",newCity);};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(Sidebar,{collapsed:sidebarCollapsed,onToggle:handleSidebarToggle,savedRoutes:savedRoutes,onRouteSelect:handleRouteSelect,selectedRoute:selectedRoute}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[/*#__PURE__*/_jsx(TopBar,{currentCity:currentCity,selectedDays:selectedDays,onCityChange:handleCityChange,onDaysChange:setSelectedDays,selectedRoute:selectedRoute}),/*#__PURE__*/_jsx(MapArea,{currentCity:currentCity,selectedDays:selectedDays,selectedRoute:selectedRoute,onSaveRoute:handleSaveRoute})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useLocation","Sidebar","TopBar","MapArea","jsx","_jsx","jsxs","_jsxs","Dashboard","sidebarCollapsed","setSidebarCollapsed","selectedDays","setSelectedDays","currentCity","setCurrentCity","selectedRoute","setSelectedRoute","savedRoutes","setSavedRoutes","id","name","days","attractions","location","_location$state","state","selectedCity","console","log","window","history","replaceState","document","title","handleSidebarToggle","prev","handleRouteSelect","route","concat","handleSaveRoute","routeData","newRoute","Date","now","handleCityChange","newCity","className","children","collapsed","onToggle","onRouteSelect","onCityChange","onDaysChange","onSaveRoute"],"sources":["/Users/william/Desktop/front/TravelPlanner/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport TopBar from \"./TopBar\";\nimport MapArea from \"./MapArea\";\n\nconst Dashboard = () => {\n  // 全局状态管理\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [selectedDays, setSelectedDays] = useState(\"5days\");\n  const [currentCity, setCurrentCity] = useState(\"Paris\");\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [savedRoutes, setSavedRoutes] = useState([\n    { id: 1, name: \"Paris Romantic 3-Day Tour\", days: 3, attractions: 8 },\n    { id: 2, name: \"Paris Art & Culture Route\", days: 5, attractions: 12 },\n    { id: 3, name: \"Paris Food Adventure\", days: 2, attractions: 6 },\n  ]);\n\n  const location = useLocation();\n\n  // 监听从城市选择页面返回的数据\n  useEffect(() => {\n    if (location.state?.selectedCity) {\n      setCurrentCity(location.state.selectedCity);\n      console.log(\"城市已更新为:\", location.state.selectedCity);\n\n      // 清除路由状态，避免重复触发\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state]);\n\n  // 明确定义切换函数\n  const handleSidebarToggle = () => {\n    console.log(\"Toggling sidebar, current state:\", sidebarCollapsed);\n    setSidebarCollapsed((prev) => !prev);\n  };\n\n  // 处理路线选择\n  const handleRouteSelect = (route) => {\n    setSelectedRoute(route);\n    setSelectedDays(`${route.days}days`);\n  };\n\n  // 处理新路线保存\n  const handleSaveRoute = (routeData) => {\n    const newRoute = {\n      id: Date.now(),\n      name: routeData.name,\n      days: routeData.days,\n      attractions: routeData.attractions,\n    };\n    setSavedRoutes([...savedRoutes, newRoute]);\n  };\n\n  // 处理城市更改\n  const handleCityChange = (newCity) => {\n    setCurrentCity(newCity);\n    console.log(\"城市已更改为:\", newCity);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* 侧边栏 */}\n      <Sidebar\n        collapsed={sidebarCollapsed}\n        onToggle={handleSidebarToggle}\n        savedRoutes={savedRoutes}\n        onRouteSelect={handleRouteSelect}\n        selectedRoute={selectedRoute}\n      />\n\n      {/* 主内容区域 */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* 顶部工具栏 */}\n        <TopBar\n          currentCity={currentCity}\n          selectedDays={selectedDays}\n          onCityChange={handleCityChange}\n          onDaysChange={setSelectedDays}\n          selectedRoute={selectedRoute}\n        />\n\n        {/* 地图区域 */}\n        <MapArea\n          currentCity={currentCity}\n          selectedDays={selectedDays}\n          selectedRoute={selectedRoute}\n          onSaveRoute={handleSaveRoute}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}